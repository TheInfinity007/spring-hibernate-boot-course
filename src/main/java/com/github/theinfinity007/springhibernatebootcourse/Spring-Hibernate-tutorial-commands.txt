Running spring boot apps

> java -jar mycoolapp.jar

Package and Run Using Maven
> mvn package
> mvn spring-boot:run

--------------------------------------

WAR - Web Application Archive
Deploy WAR to tomcat, JBoss, WebSphere

--------------------------------------

Run Test
> mvn clean compile test

--------------------------------------

### Spring properties

Categories: core, security, data, actuator, test, integrations, devlops, devtools,

# Core
logging.level.org.springframework=DEBUG
logging.level.org.hiberate=TRACE
logging.level.com.github=INFO

# Web
server.port=7070
server.servlet.session.timeout=15m  // default http session timeout

# security
spring.security.user.name=admin
spring.security.user.password=topsecret

# Data
spring.datasource.url=jdbc:mysql://localhost:3306/ecommerce
spring.datasource.username=scott
spring.datasource.password=liger

--------------------------------------

Scan base package config

@SpringBootApplication(
    scanBasePackages = { "com.github.theinfinity.com.mainapp", "com.github.theinfinity.com.secondapp"}
)

--------------------------------------

Hibernate
* Frameworkd for persisting /saving Java Objects in a database
* hibernate.org/orm

Benefits of Hibernate:
* Handles all low level SQL
* minimize the amount of JDBC code you have to devleop
* provide the object to relational mapping (ORM)

JPA
* Jakarta persistence API (previously know as Java Persistence API)
* Standard API for object to relational mapping (ORM)
* Only a specification
* Defines a set of interfaces
* Requires an implementation to be usable

Vendors implementing JPA
Hibernate, EclipseLink, etc

Benefits of JPA
* By having a stardard API, you are not locked to vendor's implementation
* Maintain portable, flexible code by coding to JPA spec (interfaces)
* Can theoretically switch vendor implementations
     For eg, if vendor ABC stops supporting their product
     you could switch to vendor XYZ without vendor lock in

Weather report
currency converter app
movie tickets app
Customer relationship manager (CRM) app

MIME: multipurpose internet mail extension
type/sub-type

text/html, text/plain
application/json, application/xml,..


Jackson Data binding
JSON-to-POJO(deserialization) -> setter method
POJO-to-JSON (serialization) -> getter method